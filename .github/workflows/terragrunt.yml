---
name: 'Terragrunt GitHub Actions'

on:
  push:
    branches:
      - dev
      - pre
      - prod
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_S3_ENDPOINT: ${{ secrets.TF_S3_ENDPOINT }}
  TF_DYNAMODB_ENDPOINT: ${{ secrets.TF_DYNAMODB_ENDPOINT }}
  TF_VAR_CI_ENVIRONMENT_NAME: ${{ github.ref_name }}
  tf_version: '1.9.8'
  tg_version: '0.68.9'
  working_dir: '.'

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  plan:
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Plan
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2
        with:
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          TF_S3_ENDPOINT: ${{ env.TF_S3_ENDPOINT }}
          TF_DYNAMODB_ENDPOINT: ${{ env.TF_DYNAMODB_ENDPOINT }}
          TF_VAR_CI_ENVIRONMENT_NAME: ${{ github.ref_name }}
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all plan --var-file=${{ github.ref_name }}.tfvars'

  deploy:
    runs-on: ubuntu-latest
    needs: [ plan ]
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.ref_name }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2
        with:
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          TF_S3_ENDPOINT: ${{ env.TF_S3_ENDPOINT }}
          TF_DYNAMODB_ENDPOINT: ${{ env.TF_DYNAMODB_ENDPOINT }}
          TF_VAR_CI_ENVIRONMENT_NAME: ${{ github.ref_name }}
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all apply --var-file=${{ github.ref_name }}.tfvars'
