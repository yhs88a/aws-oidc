---
name: 'terragrunt action'

on:
  push:
    branches:
      - dev
      - pre
      - prod
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_S3_ENDPOINT: ${{ secrets.TF_S3_ENDPOINT }}
  TF_DYNAMODB_ENDPOINT: ${{ secrets.TF_DYNAMODB_ENDPOINT }}
  TF_VAR_CI_ENVIRONMENT_NAME: ${{ github.ref_name }}
  TF_VERSION: 1.9.8 # renovate: datasource=docker depName=hashicorp/terraform
  TG_VERSION: 0.68.13 # renovate: datasource=github-tags depName=gruntwork-io/terragrunt
  working_dir: "."

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'checkout'
        uses: actions/checkout@main

      - name: 'check terragrunt HCL'
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2
        with:
          TF_VERSION: ${{ env.TF_VERSION }}
          TG_VERSION: ${{ env.TG_VERSION }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"

  plan:
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: 'checkout'
        uses: actions/checkout@main

      - name: 'plan'
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2
        with:
          TF_VERSION: ${{ env.TF_VERSION }}
          TG_VERSION: ${{ env.TG_VERSION }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "run-all plan --var-file=${{ github.ref_name }}.tfvars"

  deploy:
    runs-on: ubuntu-latest
    needs: [ plan ]
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.ref_name }}
    steps:
      - name: 'checkout'
        uses: actions/checkout@main

      - name: 'deploy'
        uses: gruntwork-io/terragrunt-action@cf355638dbd066b6a70eb01f31ad9293870a0e34 # v2
        with:
          TF_VERSION: ${{ env.TF_VERSION }}
          TG_VERSION: ${{ env.TG_VERSION }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "run-all apply --var-file=${{ github.ref_name }}.tfvars"
